

package cn.yxd.crm;

import org.springframework.stereotype.Component;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebService(name = "CustomerService", targetNamespace = "http://service.yxd.cn/")
@XmlSeeAlso({
       // ObjectFactory.class
})
@Component("CustomerService")
public interface CustomerService {


    /**
     *
     * @return
     *     returns java.util.List<cn.yxd.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findListNotAssociation", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.FindListNotAssociation")
    @ResponseWrapper(localName = "findListNotAssociationResponse", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.FindListNotAssociationResponse")
    public List<Customer> findListNotAssociation();

    /**
     *
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "assigncustomerstodecidedzone", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.Assigncustomerstodecidedzone")
    @ResponseWrapper(localName = "assigncustomerstodecidedzoneResponse", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.AssigncustomerstodecidedzoneResponse")
    public void assigncustomerstodecidedzone(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    List<Integer> arg1);

    /**
     *
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findListByAddress", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.FindListByAddress")
    @ResponseWrapper(localName = "findListByAddressResponse", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.FindListByAddressResponse")
    public String findListByAddress(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0);

    /**
     *
     * @param arg0
     * @return
     *     returns java.util.List<cn.yxd.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findListAssociation", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.FindListAssociation")
    @ResponseWrapper(localName = "findListAssociationResponse", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.FindListAssociationResponse")
    public List<Customer> findListAssociation(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0);

    /**
     *
     * @return
     *     returns java.util.List<cn.yxd.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAll", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.GetAll")
    @ResponseWrapper(localName = "getAllResponse", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.GetAllResponse")
    public List<Customer> getAll();

    /**
     *
     * @param arg0
     * @return
     *     returns cn.yxd.service.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findListByTelephone", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.FindListByTelephone")
    @ResponseWrapper(localName = "findListByTelephoneResponse", targetNamespace = "http://service.yxd.cn/", className = "cn.yxd.service.FindListByTelephoneResponse")
    public Customer findListByTelephone(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0);

}
